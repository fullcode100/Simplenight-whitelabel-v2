// Generated by https://quicktype.io

export interface Cart {
  cart: CartClass;
}

export interface CartClass {
  cart_id: string;
  created_at: string;
  currency: Currency;
  items: Item[];
  lang: string;
  last_update_at: string;
  sandbox_mode: boolean;
  status: string;
  total_amount_post_paid: TotalAmount;
  total_amount_taxes_postpaid: TotalAmount;
  total_amount_taxes: TotalAmount;
  total_amount: TotalAmount;
  total_item_qty: number;
}

export enum Currency {
  Usd = 'USD',
}

export interface Item {
  booking_data: BookingData;
  cart_id: string;
  cart_item_id: string;
  category: string;
  created_at: string;
  item_data: ItemData;
  inventory_id: string;
  inventory_name: string;
  quantity: number;
  rate: ItemRate;
  sn_booking_code: string;
  status: string;
  supplier: string;
  sector: string;
  thumbnail_url: string;
}

export interface BookingData {
  adults: number;
  guests: number;
  nights: number;
  children: number;
  room_qty: number;
  children_ages: null;
}

export interface ItemData {
  id: string;
  rooms: Room[];
  photos: Photo[];
  details: Details;
  end_date: string;
  relevance: number;
  thumbnail: string;
  amount_min: TotalAmount;
  giata_code: string;
  start_date: string;
  min_rate_room: Room;
  pricing_model: string;
  relative_position: RelativePosition;
  accommodation_type: string;
  selected_room_code: null;
  terms_and_conditions: string;
}

export interface TotalAmount {
  amount: number;
  currency: Currency;
  formatted: string;
  debug_info?: string[];
}

export interface Details {
  web: string;
  fees: Fees;
  name: string;
  type: string;
  chain: null;
  email: string;
  phones: Phone[];
  address: Address;
  policies: CheckInInstruction[];
  facilities: string[];
  description: string;
  star_rating: string;
  checkin_time: string;
  sn_amenities: string[];
  checkout_time: string;
  special_instructions: null;
  check_in_instructions: CheckInInstruction[];
}

export interface Address {
  city: string;
  zone: string;
  state: string;
  country: string;
  address1: string;
  address2: string;
  district: string;
  coordinates: Coordinates;
  postal_code: string;
  country_code: string;
}

export interface Coordinates {
  latitude: number;
  longitude: number;
}

export interface CheckInInstruction {
  list: string[];
  paragraph: string;
}

export interface Fees {
  optional: CheckInInstruction[];
  mandatory: CheckInInstruction[];
}

export interface Phone {
  phone_type: string;
  phone_number: string;
}

export interface Room {
  code: string;
  name: string;
  rates: Rates;
  photos: Photo[];
  capacity: Capacity;
  services: Services;
  amenities: string[];
  room_type: string;
  description: string;
}

export interface Capacity {
  max_pax: number;
  min_pax: number;
  max_adults: number;
  min_adults: number;
  max_children: number;
  min_children: number;
}

export interface Photo {
  url: string;
  text: string;
}

export interface Rates {
  min_rate: MinRate;
  upgrades: any[];
  avg_amount: AvgAmount;
}

export interface AvgAmount {
  markups: null;
  discounts: null;
  avg_amount: TotalAmount;
}

export interface MinRate {
  rate: MinRateRate;
  comments: string;
  meal_plan: MealPlan;
  rate_type: string;
  available_qty: number;
  sn_booking_code: string;
  cancellation_policy: CancellationPolicy;
  booking_code_supplier: string;
  requires_validation_before_booking: boolean;
}

export interface CancellationPolicy {
  details: Detail[];
  description: string;
  cancellation_type: string;
}

export interface Detail {
  to_date: string;
  from_date: string;
  penalty_amount: TotalAmount;
  cancellation_type: string;
  penalty_percentage: number;
}

export interface MealPlan {
  code: string;
  text: string;
}

export interface MinRateRate {
  total_amount: TotalAmount;
  rate_breakdown: RateBreakdown;
  starting_room_total: TotalAmount;
  suggested_retail_total_amount: null;
}

export interface RateBreakdown {
  taxes: Tax[];
  markups: null;
  discounts: null;
  daily_rates: null;
  total_taxes: TotalAmount;
  extra_charges: null;
  post_paid_rate: PostPaidRate;
  total_base_amount: TotalAmount;
}

export interface PostPaidRate {
  taxes: Tax[];
  total_taxes: TotalAmount;
  total_amount: TotalAmount;
  total_base_amount: TotalAmount;
}

export interface Tax {
  type: string;
  tax_amount: TotalAmount;
  description: string;
  included_in_total: boolean;
  tax_original_amount: TotalAmount;
}

export interface RelativePosition {
  near_to: any[];
  distance: number;
  distance_unit: string;
  distance_to_city_centre: number;
  distance_to_nearest_airport: number;
}

export interface ItemRate {
  fees: Discounts;
  taxes: Taxes;
  total: Total;
  discounts: Discounts;
  cancellation_policy: any[];
}

export interface Discounts {
  breakdown: Breakdown[];
  amount_to_apply: LivingstoneSouthernWhiteFacedOwl;
  percentage_to_apply: string;
  net_amount_before_apply: null;
  base_amount_before_apply: LivingstoneSouthernWhiteFacedOwl;
  total_amount_before_apply: LivingstoneSouthernWhiteFacedOwl;
}

export interface Taxes {
  full: Full;
  prepaid: Prepaid[];
  postpaid: any[];
  total_postpaid: Full;
}

export interface Full {
  key: string;
  amount: TotalAmount;
  description: string;
}

export interface Prepaid {
  type: string;
  amount: TotalAmount;
  description: string;
}

export interface Total {
  net: TotalAmount;
  full: TotalAmount;
  prepaid: TotalAmount;
  postpaid: TotalAmount;
}

// Generated by https://quicktype.io

export interface LivingstoneSouthernWhiteFacedOwl {
  amount: number;
  currency: Currency;
  formatted: string;
  debug_info?: string[];
}

export interface Chain {
  chain_code: string;
  chain_name: string;
}

export interface Phone {
  phone_type: string;
  phone_number: string;
}

export enum Text {
  Bar = 'Bar',
  Conferences = 'Conferences',
  GeneralView = 'General view',
  Lobby = 'Lobby',
  Pool = 'Pool',
  Restaurant = 'Restaurant',
  Room = 'Room',
  SportsAndEntertainment = 'Sports and Entertainment',
}

export interface Breakdown {
  amount: LivingstoneSouthernWhiteFacedOwl;
  source: string;
  percentage: number;
  description: string;
}

export interface Tax {
  type: string;
  tax_amount: LivingstoneSouthernWhiteFacedOwl;
  description: string;
  included_in_total: boolean;
  tax_original_amount: LivingstoneSouthernWhiteFacedOwl;
}

export interface Services {
  crib: null;
  free_wifi: boolean;
  king_beds: null;
  other_beds: null;
  queen_beds: null;
  total_beds: number;
  double_beds: null;
  total_rooms: number;
  free_parking: boolean;
  smoking_free: null;
  child_friendly: null;
  free_breakfast: boolean;
  total_bathrooms: number;
}

export interface Full {
  key: string;
  amount: LivingstoneSouthernWhiteFacedOwl;
  description: string;
}

export interface Prepaid {
  type: string;
  amount: LivingstoneSouthernWhiteFacedOwl;
  description: string;
}

export interface Total {
  net: LivingstoneSouthernWhiteFacedOwl;
  full: LivingstoneSouthernWhiteFacedOwl;
  prepaid: LivingstoneSouthernWhiteFacedOwl;
  postpaid: LivingstoneSouthernWhiteFacedOwl;
}

export enum Description {
  CESShowNew = 'CES Show new',
  SimplenightMarkup = 'Simplenight Markup',
}

export enum Source {
  Simplenight = 'SIMPLENIGHT',
}

export enum PercentageToApply {
  The12 = '12%',
  The5 = '5%',
}
